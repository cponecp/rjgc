'''
它可以实现对一个大容量英文文献进行分词与分句，并且能够对该文献内容的全文单词位置进行检索。
更具体地，对于一个含有以分隔符（逗号“,”、空格“ ”、分号“;”、英文句号“.”等非英文字母）分隔开的若干单词的
文本文献（其中单词可能重复），程序要读入和存储整个文本，并根据输入的若干个单词进行查询，返回每个单词出现的所有
句子以及是句子中第几个单词。

1. 功能实现要求（90分）
实验输入为一个含有标点符号的英文文献。其中，将所有连续的英文字母视作一个单词，仅以句号“.”、问号“?”、感叹号“!”结尾
的才视作一个完整的句子。例如：“fdafa”、“a”、“b”均是一个单词，而“I‘m a boy.”是一个句子，它含有“I”、“m”、“a”、
“boy”四个单词；但“I am a boy,”则不是一个完整的句子，因为其以逗号“,”结尾。若最后一句话没有结束符号，则视为不完整的句子，不计入结果。

实验中所有的单词字母不区分大小写，“Single”和“single”视为同一个单词。
不允许使用诸如python中内置dict等哈希表扩展。

待分析文件中包含完整的英文文献。查询文件中每行一个单词，要求输出这个单词在文献中出现的所有句子的次序以及在该句子中出现的位置。
两个数以“/”号隔开，例如第一个句子第二个单词，输出应为1/2。每一个这样的数对之间以逗号隔开，每个单词的所有出现位置输出一行。

若待查询单词在文献中没有出现，则输出字符串“None”。

2. 性能测试要求（10分）

在完成功能要求的前提下，本作业还要对代码性能进行测试。具体测试样例如下：

性能测试样例1：输入文件大小为1M，待查询单词为100个。

性能测试样例2：输入文件大小为5M，待查询单词为1000个。

性能测试样例3：输入文件大小为30M，待查询单词为2000个。

性能测试最低要求机器内存小于100M，程序运行时间小于300s，否则视为测试失败。

3. 输入输出样例

【样例一】
  文件内容：
  I’m a coder in the University.
  查询内容：
  A
  The
  输出：
  1/3
  1/6

【样例二】
  文件内容：
  She is a beautiful girl. And they met in the school.
  查询内容：
  BoY
  And
  Scho
  输出：
  None
  2/1
  None

【样例三】
  文件内容：
  Python is a good language. C++ is another one. But my favourite language is Java. Language is
  查询内容：
  Language
  C
  good
  输出：
  1/5,3/4
  2/1
  1/4
  '''